on:
  workflow_call:
    inputs:

      
runs:
  using: 'composite'
  steps:
    - name: "Get Latest AzOps version"
      if: ${{ env.MODULE_VERSION == '' }}
      shell: pwsh
      run: |
        $latestVersionUri = "https://www.powershellgallery.com/api/v2/FindPackagesById()?id='AzOps'&`$filter=IsLatestVersion"
        $latestVersionId = (Invoke-RestMethod $latestVersionUri).properties.NormalizedVersion
        echo "MODULE_VERSION=$latestVersionId" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Cache AzOps module
      if: ${{ env.MODULE_VERSION != '' }}
      id: cache-AzOps
      uses: actions/cache@v2
      with:
        path: '${{ github.workspace }}/Module'
        key: '"AzOpsModule" | ${{env.MODULE_VERSION}}'

   
    - name: "Dependencies"
      shell: pwsh
      run: |
        Write-Host "OK" ${{env.MODULE_VERSION}}
        Install-Module -Name "AzOps" -Force
      #
      # Connect
      # Authenticate Azure context
      #

    - name: "Connect"
      shell: pwsh
      run: |
        $credential = New-Object PSCredential -ArgumentList ${{env.ARM_CLIENT_ID}}, (ConvertTo-SecureString -String ${{env.ARM_CLIENT_SECRET}} -AsPlainText -Force)
        Connect-AzAccount -TenantId ${{env.ARM_TENANT_ID}} -ServicePrincipal -Credential $credential -SubscriptionId ${{env.ARM_SUBSCRIPTION_ID}}
