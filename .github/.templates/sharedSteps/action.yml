on:
  workflow_call:
    inputs:

      
runs:
  using: 'composite'
  steps:
    - name: "Get Latest AzOps version"
      if: ${{ env.AZOPS_MODULE_VERSION == '' }}
      shell: pwsh
      run: |
        write-host '${{ github.workspace }}/Module'
        write-host ${{env.AZOPS_MODULE_VERSION}}
        $latestVersionUri = "https://www.powershellgallery.com/api/v2/FindPackagesById()?id='AzOps'&`$filter=IsLatestVersion"
        $latestVersionId = (Invoke-RestMethod $latestVersionUri).properties.NormalizedVersion
        # Write-Host "##vso[task.setvariable variable=AZOPS_MODULE_VERSION;]$latestVersionId"
        # Write-Host ::set-env name=AZOPS_MODULE_VERSION::$latestVersionId
        echo "AZOPS_MODULE_VERSION=$latestVersionId" >> $GITHUB_ENV
      
        
    - name: "Dependencies"
      shell: pwsh
      run: |
        Write-Host "OK" ${{env.AZOPS_MODULE_VERSION}}
        Write-Host "ok1" $GITHUB_ENV
        Write-Host "ok2" ${{env.GITHUB_ENV}}
        Write-Host "ok3" ${{env.AZOPS_MODULE_VERSION}}
        Write-Host "ok3" $AZOPS_MODULE_VERSION
        Install-Module -Name "AzOps" -Force
      #
      # Connect
      # Authenticate Azure context
      #

    - name: "Connect"
      shell: pwsh
      run: |
        $credential = New-Object PSCredential -ArgumentList ${{env.ARM_CLIENT_ID}}, (ConvertTo-SecureString -String ${{env.ARM_CLIENT_SECRET}} -AsPlainText -Force)
        Connect-AzAccount -TenantId ${{env.ARM_TENANT_ID}} -ServicePrincipal -Credential $credential -SubscriptionId ${{env.ARM_SUBSCRIPTION_ID}}
